# -*- coding: utf-8 -*-
# Generated by Django 1.11.21 on 2019-06-18 12:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('color', models.CharField(max_length=200, verbose_name='Color')),
            ],
            options={
                'verbose_name_plural': 'Environments',
            },
        ),
        migrations.CreateModel(
            name='ESXi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('hostname', models.CharField(max_length=200, verbose_name='Hostname')),
                ('user', models.CharField(default='root', max_length=200, verbose_name='User')),
                ('password', models.CharField(max_length=200, verbose_name='Password')),
                ('tooltip', models.CharField(blank=True, max_length=200, verbose_name='Tooltip')),
                ('port', models.IntegerField(default=443, verbose_name='Port')),
                ('enable', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'ESXi',
                'verbose_name_plural': 'ESXis',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='OS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_family', models.CharField(max_length=200, verbose_name='Family')),
                ('os_version', models.CharField(max_length=200, verbose_name='Version')),
                ('os_arch', models.CharField(max_length=200, verbose_name='Architecture')),
            ],
            options={
                'verbose_name': 'OS',
                'verbose_name_plural': 'OS',
            },
        ),
        migrations.CreateModel(
            name='ReservedIPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Address')),
                ('network_mask', models.CharField(default='24', max_length=15, verbose_name='Network mask')),
                ('observations', models.TextField(default='', verbose_name='Observations')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
            ],
            options={
                'verbose_name': 'Reserved IP',
                'verbose_name_plural': 'Reserved IPs',
            },
        ),
        migrations.CreateModel(
            name='VM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, default='', max_length=200, verbose_name='UUID')),
                ('iuuid', models.CharField(blank=True, default='', max_length=200, verbose_name='Instance UUID')),
                ('vmid', models.CharField(blank=True, default='', max_length=200, verbose_name='VMid')),
                ('public', models.BooleanField(default=True, help_text="VMs with 'Public VM' field set to false are not visible to users, even in searches.", verbose_name='Public VM')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted VM')),
                ('pending_poweron', models.BooleanField(default=False, verbose_name='Power on requested')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Name')),
                ('path', models.CharField(default='', max_length=200, verbose_name='Path')),
                ('guest', models.CharField(default='', max_length=200, verbose_name='Operating System')),
                ('annotation', models.TextField(blank=True, default='', verbose_name='Annotation')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Personal Notes')),
                ('state', models.BooleanField(default=False, help_text='Green: On, Red: Off', verbose_name='State')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='IP Address')),
                ('networking', models.TextField(blank=True, default='', verbose_name='Networking')),
                ('cpus', models.IntegerField(default=0, verbose_name='vCPUs')),
                ('ram', models.IntegerField(default=0, verbose_name='vRAM')),
                ('hdds', models.CharField(default='', max_length=200, verbose_name='HDDs')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last Check')),
                ('uptime', models.IntegerField(blank=True, null=True, verbose_name='Uptime')),
                ('last_poweron', models.DateTimeField(blank=True, null=True, verbose_name='Last time seen ON')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('environment', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='vmtory.Environment', verbose_name='Environment')),
                ('favorites', models.ManyToManyField(blank=True, related_name='favorite_vm', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='Group')),
                ('hypervisor', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='vmtory.ESXi', verbose_name='Hypervisor')),
            ],
            options={
                'verbose_name': 'VM',
                'verbose_name_plural': 'VMs',
            },
        ),
        migrations.AddField(
            model_name='esxi',
            name='location',
            field=models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='vmtory.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='reservedipaddress',
            unique_together=set([('ip_address', 'network_mask')]),
        ),
    ]
